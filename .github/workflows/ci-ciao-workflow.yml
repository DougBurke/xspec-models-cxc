name: CIAO CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

# Reduces GH Action duplication:
# Cancels the previous pipeline for this ref it is still running
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    defaults:
      run:
        # See https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # to ensure we pass the "-el {0}" option
        shell: bash -el {0}

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: "Linux (Python 3.12)"
            os: "ubuntu-latest"
            python-version: "3.12"
            xspec-version: "12.14.0i"
            xspec-channel: "https://cxc.cfa.harvard.edu/conda/xspec"
            conda-compilers: "gcc_linux-64 gxx_linux-64 gfortran_linux-64"

          - name: "Linux (Python 3.10)"
            os: "ubuntu-latest"
            python-version: "3.10"
            xspec-version: "12.14.0i"
            xspec-channel: "https://cxc.cfa.harvard.edu/conda/xspec"
            conda-compilers: "gcc_linux-64 gxx_linux-64 gfortran_linux-64"

          - name: "macOS ARM (Python 3.12)"
            os: "macos-latest"
            python-version: "3.12"
            xspec-version: "12.13.1e"
            xspec-channel: "https://cxc.cfa.harvard.edu/conda/ciao"
            conda-compilers: "clang_osx-arm64 clangxx_osx-arm64 gfortran_osx-arm64"

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4.1.1
      with:
        submodules: 'True'

    - name: Install Miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: build
        miniforge-version: latest
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true

    - name: Conda Setup
      env:
        PYTHONVER: ${{ matrix.python-version }}
        XSPECVER: ${{ matrix.xspec-version }}
        XSPECCHAN: ${{ matrix.xspec-channel }}
        COMPILERS: ${{ matrix.conda-compilers }}
      run: |
        conda create --yes -n build -c conda-forge -c $XSPECCHAN "python=$PYTHONVER" "xspec-modelsonly=$XSPECVER" $COMPILERS

    - name: Install
      run: |
        pip install .[test] --verbose

    - name: Test
      run: |
        pytest
